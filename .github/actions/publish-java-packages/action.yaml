name: 'Publish Maven Packages'
description: 'Run maven deploy actions'

inputs:
  githubActor:
    required: true
    description: 'New version number for the project post release'
  githubToken:
    required: true
    description: 'Github token for publishing packages to Github Packages'
  mavenCentralUser:
    required: true
    description: 'Username for publishing to Maven Central'
  mavenCentralPassword:
    required: true
    description: 'Password for publishing to Maven Central'
  gpgPassphrase:
    required: true
    description: 'Passphrase for GPG key to sign artifacts'
  isRelease:
    required: false
    description: 'Set to true if this is a release build, which allows publishing non-SNAPSHOT versions to Maven Central.'
    default: 'false'

runs:
  using: "composite"
  steps:
    - name: Get project version
      id: get_version
      run: echo "version=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)" >> $GITHUB_OUTPUT
      shell: bash

    # Use Maven deploy command to deploy packages
    - name: 'Publish Java package to github'
      if: inputs.isRelease == 'true' || endsWith(steps.get_version.outputs.version, '-SNAPSHOT')
      run: |
        mvn -Dgithub.user=${{ inputs.githubActor }} \
          -Dgithub.token=${{ inputs.githubToken }} \
          -P default,publish-github \
          --batch-mode deploy
      shell: bash

    # Skip tests in this instance because they are the same as the previous build
    # Only publish to Maven Central if it's a release build, or if it's a non-release (dev) build of a SNAPSHOT version.
    - name: 'Publish Java package to Maven Central'
      if: inputs.isRelease == 'true' || endsWith(steps.get_version.outputs.version, '-SNAPSHOT')
      run: |
        mvn -Dcentral.user=${{ inputs.mavenCentralUser }} \
          -Dcentral.token=${{ inputs.mavenCentralPassword }} \
          -Dmaven.test.skip=true \
          -P default,publish-central \
          --batch-mode deploy
      shell: bash
      env:
        MAVEN_GPG_PASSPHRASE: ${{ inputs.gpgPassphrase }}
